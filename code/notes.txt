TODO:
	Check welke knop is ingedrukt na PCINT IRQ
		Kijk of we met 4x4 pins 16 knoppen kunnen bedienen
	koppel knop aan geluid
	
	multiplex knop geluid met telefoon/mp3 speler input
	

</ToDo>


datasheet pp 87

The Pin Change Interrupt Request 2 (PCI2) will trigger if any enabled PCINT[23:16] pin toggles. The Pin
Change Interrupt Request 1 (PCI1) will trigger if any enabled PCINT[14:8] pin toggles. The Pin Change
Interrupt Request 0 (PCI0) will trigger if any enabled PCINT[7:0] pin toggles. The PCMSK2, PCMSK1 and
PCMSK0 Registers control which pins contribute to the pin change interrupts. Pin change interrupts on
PCINT are detected asynchronously. This implies that these interrupts can be used for waking the part
also from sleep modes other than Idle mode.

Ik wil gebruiken pinc0:5 = pcint 8-13
The Pin Change Interrupt Request 1 (PCI1) will trigger if any enabled PCINT[14:8] pin toggles.

Daar kan ik hopelijk 9 knopjes mee onderscheiden.


IGNORE THIS HAHAHA
	PCMSK0	= BIT(PCINT0);	//on pin PCINT0
	Je kunt gewoon interrupt pins masken doh
	
================
voor 4x4 moet ik PCI2 of PCI0 gebruiken, die geven 8 bits.
Dat wordt waarschijnlijk rommelen met pinnen:
	pinnen die als output staan geset kunnen ook interrupts genereren.
	dus als ik SD communicatie/speaker output deel met de PCI2 of PCI0 pinnen, krijg ik enorm gezeik met interrupts die ik niet wil en moet gaan filteren.
	Misschien is een multiplex chipje zo gek nog niet